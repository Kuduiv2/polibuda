#include "LZespolona.hh"
#include <iostream>


/*!
 * Realizuje dodanie dwoch liczb zespolonych.
 * Argumenty:
 *    Skl1 - pierwszy skladnik dodawania,
 *    Skl2 - drugi skladnik dodawania.
 * Zwraca:
 *    Sume dwoch skladnikow przekazanych jako parametry.
 */
LZespolona  operator + (LZespolona  Skl1,  LZespolona  Skl2)
{
  LZespolona  Wynik;

  Wynik.re = Skl1.re + Skl2.re;
  Wynik.im = Skl1.im + Skl2.im;
  return Wynik;
}

/*moje*/

std::istream& operator >> (std::istream &Strm, LZespolona  &Skl1)
{
  double a;
  std::cout<<"czesc rzeczywista:";
  std::cin>>a;
  Skl1.re=a; 
  std::cout<<"czesc urojona:";
  std::cin>>a;
  Skl1.im=a;

return Strm;    
}

std::ostream& operator << (std::ostream &Strm, const LZespolona  &Skl1)
{
std::cout << "(" << Skl1.re << std::showpos << Skl1.im<<"i )"<< std::noshowpos;
return Strm;
}

LZespolona  operator - (LZespolona  Skl1,  LZespolona  Skl2)
{
  LZespolona  Wynik;

  Wynik.re = Skl1.re - Skl2.re;
  Wynik.im = Skl1.im - Skl2.im;
  return Wynik;
}

void wyswietl(LZespolona Skl1)
{
  std::cout << "(" << Skl1.re <<" "<< std::showpos << Skl1.im<<"i )" << std::noshowpos;
}

LZespolona  sprzerzenie (LZespolona  Skl1)
{
  LZespolona  Wynik;

  Wynik.re = Skl1.re;
  Wynik.im = 0 - Skl1.im;
  return Wynik;
}
/*
  LZespolona  Wynik;

  Wynik.re = (Skl1.re * Skl2);
  Wynik.im = (Skl1.im * Skl2);
  return Wynik;
*/

LZespolona  operator / (LZespolona  Skl1,  double  Skl2)
{
  LZespolona  Wynik;

  Wynik.re = (Skl1.re / Skl2);
  Wynik.im = (Skl1.im / Skl2);
  return Wynik;
}

//mniżenie i dzielnie przez zespoloną
LZespolona  operator * (LZespolona  Skl1,  LZespolona  Skl2)
{
  LZespolona  Wynik;
  Wynik.re = (Skl1.re * Skl2.re) - (Skl1.im * Skl2.im);
  Wynik.im = (Skl2.re * Skl1.im) + (Skl1.re * Skl2.im);
  return Wynik;
}

double modul (LZespolona  Skl1)
{
  LZespolona  Wynik;
  
  Wynik = Skl1 * sprzerzenie (Skl1);
  return Wynik.re;
}

LZespolona  operator / (LZespolona  Skl1,  LZespolona  Skl2)
{
  LZespolona  Wynik;
  LZespolona temp1,temp2;
  temp1 = ( Skl1 * sprzerzenie ( Skl2 ) );
  temp2= ( Skl2  * sprzerzenie ( Skl2 ) );
  Wynik=temp1/temp2.re;
  
  return Wynik;
}


//bool  operator != (LZespolona  Skl1,  LZespolona  Skl2){if (Skl1.re=Skl2.re) {if (Skl1.im=Skl2.im)return false;else true};else true };
//bool  operator == (LZespolona  Skl1,  LZespolona Skl2){if (Skl1.re=Skl2.re) {if (Skl1.im=Skl2.im)return true;else false};else false };
//bool  operator < (LZespolona  Skl1,  LZespolona Skl2);
//bool  operator > (LZespolona  Skl1,  LZespolona  Skl2);
//bool  operator >= (LZespolona  Skl1,  LZespolona  Skl2)
//bool  operator <= (LZespolona  Skl1,  LZespolona  Skl2);
